========,1,preface.
The Resource Description Framework (RDF) is a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model.
It has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources, using a variety of syntax notations and data serialization formats.
It is also used in knowledge management applications.
RDF was adopted as a W3C recommendation in 1999.
The RDF 1.0 specification was published in 2004, the RDF 1.1 specification in 2014.
========,2,Overview.
The RDF data model is similar to classical conceptual modeling approaches (such as entity–relationship or class diagrams).
It is based upon the idea of making statements about resources (in particular web resources) in the form of subject–predicate–object expressions, known as "triples".
The subject denotes the resource, and the predicate denotes traits or aspects of the resource, and expresses a relationship between the subject and the object.
For example, one way to represent the notion "The sky has the color blue" in RDF is as the triple: a subject denoting "the sky", a predicate denoting "has the color", and an object denoting "blue".
Therefore, RDF uses subject instead of object(or entity) in contrast to the typical approach of an entity–attribute–value model in object-oriented design: entity (sky), attribute (color), and value (blue).
RDF is an abstract model with several serialization formats (i.e.
file formats), so the particular encoding for resources or triples varies from format to format.
This mechanism for describing resources is a major component in the W3C's Semantic Web activity: an evolutionary stage of the World Wide Web in which automated software can store, exchange, and use machine-readable information distributed throughout the Web, in turn enabling users to deal with the information with greater efficiency and certainty.
RDF's simple data model and ability to model disparate, abstract concepts has also led to its increasing use in knowledge management applications unrelated to Semantic Web activity.
A collection of RDF statements intrinsically represents a labeled, directed multi-graph.
This theoretically makes an RDF data model better suited to certain kinds of knowledge representation than other relational or ontological models.
However, in practice, RDF data is often persisted in relational database or native representations (also called Triplestores—or Quad stores, if context (i.e.
the named graph) is also persisted for each RDF triple).
As RDFS and OWL demonstrate, one can build additional ontology languages upon RDF.
========,2,History.
The initial RDF design, intended to "build a vendor-neutral and operating system-independent system of metadata," derived from the W3C's Platform for Internet Content Selection (PICS), an early web content labelling system, but the project was also shaped by ideas from Dublin Core, and from the Meta Content Framework (MCF), which had been developed during 1995–1997 by Ramanathan V. Guha at Apple and Tim Bray at Netscape.
A first public draft of RDF appeared in October 1997, issued by a W3C working group that included representatives from IBM, Microsoft, Netscape, Nokia, Reuters, SoftQuad, and the University of Michigan.
The W3C published a specification of RDF's data model and an XML serialization as a recommendation in February 1999.
Two persistent misunderstandings developed around RDF at this time: firstly, from the MCF influence and the RDF "Resource Description" acronym, the idea that RDF was specifically for use in representing metadata.
Secondly that RDF was an XML format, rather than RDF being a data model and only the RDF/XML serialisation being XML-based.
RDF saw little take-up in this period, but there was significant work carried out in Bristol, around ILRT at Bristol University and HP Labs, and also in Boston at MIT.
RSS 1.0 and FOAF became exemplar applications for RDF in this period.
The recommendation of 1999 was replaced in 2004 by a set of six specifications: "The RDF Primer", "RDF Concepts and Abstract", "RDF/XML Syntax Specification (revised)", "RDF Semantics", "RDF Vocabulary Description Language 1.0", and "The RDF Test Cases".
This series was superseded in 2014 by the following six "RDF 1.1" documents: "RDF 1.1 Primer," "RDF 1.1 Concepts and Abstract Syntax," "RDF 1.1 XML Syntax," "RDF 1.1 Semantics," "RDF Schema 1.1," and "RDF 1.1 Test Cases".
========,2,RDF topics.
========,3,Serialization formats.
Several common serialization formats are in use, including:
***LIST***.
RDF/XML is sometimes misleadingly called simply RDF because it was introduced among the other W3C specifications defining RDF and it was historically the first W3C standard RDF serialization format.
However, it is important to distinguish the RDF/XML format from the abstract RDF model itself.
Although the RDF/XML format is still in use, other RDF serializations are now preferred by many RDF users, both because they are more human-friendly, and because some RDF graphs are not representable in RDF/XML due to restrictions on the syntax of XML QNames.
With a little effort, virtually any arbitrary XML may also be interpreted as RDF using GRDDL (pronounced 'griddle'), Gleaning Resource Descriptions from Dialects of Languages.
RDF triples may be stored in a type of database called a triplestore.
========,3,Resource identification.
The subject of an RDF statement is either a uniform resource identifier (URI) or a blank node, both of which denote resources.
Resources indicated by blank nodes are called anonymous resources.
They are not directly identifiable from the RDF statement.
The predicate is a URI which also indicates a resource, representing a relationship.
The object is a URI, blank node or a Unicode string literal.
As of RDF 1.1 resources are identified by IRI's.
IRI is a generalization of URI.
In Semantic Web applications, and in relatively popular applications of RDF like RSS and FOAF (Friend of a Friend), resources tend to be represented by URIs that intentionally denote, and can be used to access, actual data on the World Wide Web.
But RDF, in general, is not limited to the description of Internet-based resources.
In fact, the URI that names a resource does not have to be dereferenceable at all.
For example, a URI that begins with "http:" and is used as the subject of an RDF statement does not necessarily have to represent a resource that is accessible via HTTP, nor does it need to represent a tangible, network-accessible resource — such a URI could represent absolutely anything.
However, there is broad agreement that a bare URI (without a # symbol) which returns a 300-level coded response when used in an HTTP GET request should be treated as denoting the internet resource that it succeeds in accessing.
Therefore, producers and consumers of RDF statements must agree on the semantics of resource identifiers.
Such agreement is not inherent to RDF itself, although there are some controlled vocabularies in common use, such as Dublin Core Metadata, which is partially mapped to a URI space for use in RDF.
The intent of publishing RDF-based ontologies on the Web is often to establish, or circumscribe, the intended meanings of the resource identifiers used to express data in RDF.
For example, the URI:
***LIST***.
is intended by its owners to refer to the class of all Merlot red wines by vintner (i.e., instances of the above URI each represent the class of all wine produced by a single vintner), a definition which is expressed by the OWL ontology — itself an RDF document — in which it occurs.
Without careful analysis of the definition, one might erroneously conclude that an instance of the above URI was something physical, instead of a type of wine.
Note that this is not a 'bare' resource identifier, but is rather a URI reference, containing the '#' character and ending with a fragment identifier.
========,3,Statement reification and context.
The body of knowledge modeled by a collection of statements may be subjected to reification, in which each "statement" (that is each triple "subject-predicate-object" altogether) is assigned a URI and treated as a resource about which additional statements can be made, as in ""Jane says that" John is the author of document X".
Reification is sometimes important in order to deduce a level of confidence or degree of usefulness for each statement.
In a reified RDF database, each original statement, being a resource, itself, most likely has at least three additional statements made about it: one to assert that its subject is some resource, one to assert that its predicate is some resource, and one to assert that its object is some resource or literal.
More statements about the original statement may also exist, depending on the application's needs.
Borrowing from concepts available in logic (and as illustrated in graphical notations such as conceptual graphs and topic maps), some RDF model implementations acknowledge that it is sometimes useful to group statements according to different criteria, called "situations", "contexts", or "scopes", as discussed in articles by RDF specification co-editor Graham Klyne.
For example, a statement can be associated with a context, named by a URI, in order to assert an "is true in" relationship.
As another example, it is sometimes convenient to group statements by their source, which can be identified by a URI, such as the URI of a particular RDF/XML document.
Then, when updates are made to the source, corresponding statements can be changed in the model, as well.
Implementation of scopes does not necessarily require fully reified statements.
Some implementations allow a single scope identifier to be associated with a statement that has not been assigned a URI, itself.
Likewise "named graphs" in which a set of triples is named by a URI can represent context without the need to reify the triples.
========,3,Query and inference languages.
The predominant query language for RDF graphs is SPARQL.
SPARQL is an SQL-like language, and a recommendation of the W3C as of January 15, 2008.
An example of a SPARQL query to show country capitals in Africa, using a fictional ontology.
Other non-standard ways to query RDF graphs include:
***LIST***.
========,2,Examples.
========,3,Example 1: RDF Description of a person named Eric Miller.
The following example is taken from the W3C website describing a resource with statements "there is a Person identified by http://www.w3.org/People/EM/contact#me, whose name is Eric Miller, whose email address is e.miller123(at)example (changed for security purposes), and whose title is Dr.
The resource "http://www.w3.org/People/EM/contact#me" is the subject.
The objects are:
***LIST***.
The subject is a URI.
The predicates also have URIs.
For example, the URI for each predicate:
***LIST***.
In addition, the subject has a type (with URI http://www.w3.org/1999/02/22-rdf-syntax-ns#type), which is person (with URI http://www.w3.org/2000/10/swap/pim/contact#Person).
Therefore, the following "subject, predicate, object" RDF triples can be expressed:
***LIST***.
In standard N-Triples format, this RDF can be written as:
Equivalently, it can be written in standard Turtle (syntax) format as:
Or, it can be written in RDF/XML format as:
========,3,Example 2: The postal abbreviation for New York.
Certain concepts in RDF are taken from logic and linguistics, where subject-predicate and subject-predicate-object structures have meanings similar to, yet distinct from, the uses of those terms in RDF.
This example demonstrates:
In the English language statement " 'New York has the postal abbreviation NY' "," 'New York' " would be the subject, " 'has the postal abbreviation' " the predicate and " 'NY' " the object.
Encoded as an RDF triple, the subject and predicate would have to be resources named by URIs.
The object could be a resource or literal element.
For example, in the N-Triples form of RDF, the statement might look like:
In this example, "urn:x-states:New%20York" is the URI for a resource that denotes the US state New York, "http://purl.org/dc/terms/alternative" is the URI for a predicate (whose human-readable definition can be found at here ), and "NY" is a literal string.
Note that the URIs chosen here are not standard, and don't need to be, as long as their meaning is known to whatever is reading them.
========,3,Example 3: A Wikipedia article about Tony Benn.
In a like manner, given that "http://en.wikipedia.org/wiki/Tony_Benn" identifies a particular resource (regardless of whether that URI could be traversed as a hyperlink, or whether the resource is "actually" the Wikipedia article about Tony Benn), to say that the title of this resource is "Tony Benn" and its publisher is "Wikipedia" would be two assertions that could be expressed as valid RDF statements.
In the N-Triples form of RDF, these statements might look like the following:
To an English-speaking person, the same information could be represented simply as:
The title of this resource, which is published by Wikipedia, is 'Tony Benn' However, RDF puts the information in a formal way that a machine can understand.
The purpose of RDF is to provide an encoding and interpretation mechanism so that resources can be described in a way that particular software can understand it; in other words, so that software can access and use information that it otherwise couldn't use.
Both versions of the statements above are wordy because one requirement for an RDF resource (as a subject or a predicate) is that it be unique.
The subject resource must be unique in an attempt to pinpoint the exact resource being described.
The predicate needs to be unique in order to reduce the chance that the idea of Title or Publisher will be ambiguous to software working with the description.
If the software recognizes "http://purl.org/dc/elements/1.1/title" (a specific definition for the concept of a title established by the Dublin Core Metadata Initiative), it will also know that this title is different from a land title or an honorary title or just the letters t-i-t-l-e put together.
The following example, written in Turtle, shows how such simple claims can be elaborated on, by combining multiple RDF vocabularies.
Here, we note that the primary topic of the Wikipedia page is a "Person" whose name is "Tony Benn":
========,2,Applications.
***LIST***.
Some uses of RDF include research into social networking.
It will also help people in business fields understand better their relationships with members of industries that could be of use for product placement.
It will also help scientists understand how people are connected to one another.
