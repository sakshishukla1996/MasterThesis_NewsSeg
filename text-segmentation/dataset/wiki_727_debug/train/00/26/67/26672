========,1,preface.
In cryptography, SHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function designed by the United States National Security Agency and is a U.S. Federal Information Processing Standard published by the United States NIST.
SHA-1 produces a 160-bit (20-byte) hash value known as a message digest.
A SHA-1 hash value is typically rendered as a hexadecimal number, 40 digits long.
SHA-1 is no longer considered secure against well-funded opponents.
In 2005, cryptanalysts found attacks on SHA-1 suggesting that the algorithm might not be secure enough for ongoing use, and since 2010 many organizations have recommended its replacement by SHA-2 or SHA-3.
Microsoft, Google, Apple and Mozilla have all announced that their respective browsers will stop accepting SHA-1 SSL certificates by 2017.
On February 23, 2017 CWI Amsterdam and Google announced they had performed a collision attack against SHA-1, publishing two dissimilar PDF files which produce the same SHA-1 hash as proof of concept.
========,2,Development.
SHA-1 produces a message digest based on principles similar to those used by Ronald L. Rivest of MIT in the design of the MD4 and MD5 message digest algorithms, but has a more conservative design.
SHA-1 was developed as part of the U.S. Government's Capstone project.
The original specification of the algorithm was published in 1993 under the title "Secure Hash Standard", FIPS PUB 180, by U.S. government standards agency NIST (National Institute of Standards and Technology).
This version is now often named "SHA-0".
It was withdrawn by the NSA shortly after publication and was superseded by the revised version, published in 1995 in FIPS PUB 180-1 and commonly designated "SHA-1".
SHA-1 differs from SHA-0 only by a single bitwise rotation in the message schedule of its compression function.
According to the NSA, this was done to correct a flaw in the original algorithm which reduced its cryptographic security, but they did not provide any further explanation.
Publicly available techniques did indeed compromise SHA-0 before SHA-1.
========,2,Applications.
========,3,Cryptography.
SHA-1 forms part of several widely used security applications and protocols, including TLS and SSL, PGP, SSH, S/MIME, and IPsec.
Those applications can also use MD5; both MD5 and SHA-1 are descended from MD4.
SHA-1 hashing is also used in distributed revision control systems like Git, Mercurial, and Monotone to identify revisions, and to detect data corruption or tampering.
The algorithm has also been used on Nintendo's Wii gaming console for signature verification when booting, but a significant flaw in the first implementations of the firmware allowed for an attacker to bypass the system's security scheme.
SHA-1 and SHA-2 are the hash algorithms required by law for use in certain U.S. Government applications, including use within other cryptographic algorithms and protocols, for the protection of sensitive unclassified information.
FIPS PUB 180-1 also encouraged adoption and use of SHA-1 by private and commercial organizations.
SHA-1 is being retired from most government uses; the U.S. National Institute of Standards and Technology said, "Federal agencies should stop using SHA-1 for...applications that require collision resistance as soon as practical, and must use the SHA-2 family of hash functions for these applications after 2010" (emphasis in original), though that was later relaxed.
A prime motivation for the publication of the Secure Hash Algorithm was the Digital Signature Standard, in which it is incorporated.
The SHA hash functions have been used for the basis of the SHACAL block ciphers.
========,3,Data integrity.
Revision control systems such as Git and Mercurial use SHA-1 not for security but for ensuring that the data has not changed due to accidental corruption.
Linus Torvalds said about Git:
========,2,Cryptanalysis and validation.
For a hash function for which "L" is the number of bits in the message digest, finding a message that corresponds to a given message digest can always be done using a brute force search in approximately 2 evaluations.
This is called a preimage attack and may or may not be practical depending on "L" and the particular computing environment.
However, a "collision", consisting of finding two different messages that produce the same message digest, requires on average only about evaluations using a birthday attack.
Thus the strength of a hash function is usually compared to a symmetric cipher of half the message digest length.
SHA-1, which has a 160-bit message digest, was originally thought to have 80-bit strength.
Cryptographers have produced collision pairs for SHA-0 and have found algorithms that should produce SHA-1 collisions in far fewer than the originally expected 2 evaluations.
In terms of practical security, a major concern about these new attacks is that they might pave the way to more efficient ones.
Whether this is the case is yet to be seen, but a migration to stronger hashes is believed to be prudent.
Some of the applications that use cryptographic hashes, like password storage, are only minimally affected by a collision attack.
Constructing a password that works for a given account requires a preimage attack, as well as access to the hash of the original password, which may or may not be trivial.
Reversing password encryption (e.g.
to obtain a password to try against a user's account elsewhere) is not made possible by the attacks.
(However, even a secure password hash can't prevent brute-force attacks on weak passwords.)
In the case of document signing, an attacker could not simply fake a signature from an existing document: The attacker would have to produce a pair of documents, one innocuous and one damaging, and get the private key holder to sign the innocuous document.
There are practical circumstances in which this is possible; until the end of 2008, it was possible to create forged SSL certificates using an MD5 collision.
Due to the block and iterative structure of the algorithms and the absence of additional final steps, all SHA functions (except SHA-3) are vulnerable to length-extension and partial-message collision attacks.
These attacks allow an attacker to forge a message signed only by a keyed hash — or  — by extending the message and recalculating the hash without knowing the key.
A simple improvement to prevent these attacks is to hash twice: (the length of 0, zero block, is equal to the block size of the hash function).
========,3,Attacks.
In early 2005, Rijmen and Oswald published an attack on a reduced version of SHA-1 — 53 out of 80 rounds — which finds collisions with a computational effort of fewer than 2 operations.
In February 2005, an attack by Xiaoyun Wang, Yiqun Lisa Yin, and Hongbo Yu was announced.
The attacks can find collisions in the full version of SHA-1, requiring fewer than 2 operations.
(A brute-force search would require 2 operations.)
The authors write: "In particular, our analysis is built upon the original differential attack on SHA-0, the near collision attack on SHA-0, the multiblock collision techniques, as well as the message modification techniques used in the collision search attack on MD5.
Breaking SHA-1 would not be possible without these powerful analytical techniques."
The authors have presented a collision for 58-round SHA-1, found with 2 hash operations.
The paper with the full attack description was published in August 2005 at the CRYPTO conference.
In an interview, Yin states that, "Roughly, we exploit the following two weaknesses: One is that the file preprocessing step is not complicated enough; another is that certain math operations in the first 20 rounds have unexpected security problems."
On 17 August 2005, an improvement on the SHA-1 attack was announced on behalf of Xiaoyun Wang, Andrew Yao and Frances Yao at the CRYPTO 2005 Rump Session, lowering the complexity required for finding a collision in SHA-1 to 2.
On 18 December 2007 the details of this result were explained and verified by Martin Cochran.
Christophe De Cannière and Christian Rechberger further improved the attack on SHA-1 in "Finding SHA-1 Characteristics: General Results and Applications," receiving the Best Paper Award at ASIACRYPT 2006.
A two-block collision for 64-round SHA-1 was presented, found using unoptimized methods with 2 compression function evaluations.
Since this attack requires the equivalent of about 2 evaluations, it is considered to be a significant theoretical break.
Their attack was extended further to 73 rounds (of 80) in 2010 by Grechnikov.
In order to find an actual collision in the full 80 rounds of the hash function, however, tremendous amounts of computer time are required.
To that end, a collision search for SHA-1 using the distributed computing platform BOINC began August 8, 2007, organized by the Graz University of Technology.
The effort was abandoned May 12, 2009 due to lack of progress.
At the Rump Session of CRYPTO 2006, Christian Rechberger and Christophe De Cannière claimed to have discovered a collision attack on SHA-1 that would allow an attacker to select at least parts of the message.
In 2008, an attack methodology by Stéphane Manuel reported hash collisions with an estimated theoretical complexity of 2 to 2 operations.
However he later retracted that claim after finding that local collision paths were not actually independent, and finally quoting for the most efficient a collision vector that was already known before this work.
Cameron McDonald, Philip Hawkes and Josef Pieprzyk presented a hash collision attack with claimed complexity 2 at the Rump Session of Eurocrypt 2009.
However, the accompanying paper, "Differential Path for SHA-1 with complexity "O"(2)" has been withdrawn due to the authors' discovery that their estimate was incorrect.
One attack against SHA-1 is Marc Stevens with an estimated cost of $2.77M to break a single hash value by renting CPU power from cloud servers.
Stevens developed this attack in a project called HashClash, implementing a differential path attack.
On 8 November 2010, he claimed he had a fully working near-collision attack against full SHA-1 working with an estimated complexity equivalent to 2 SHA-1 compressions.
He estimates this attack can be extended to a full collision with a complexity around 2.
========,4,The SHAppening.
On , Marc Stevens, Pierre Karpman, and Thomas Peyrin published a freestart collision attack on SHA-1's compression function that requires only 2 SHA-1 evaluations.
This does not directly translate into a collision on the full SHA-1 hash function (where an attacker is "not" able to freely choose the initial internal state), but undermines the security claims for SHA-1.
In particular, it is the first time that an attack on full SHA-1 has been "demonstrated"; all earlier attacks were too expensive for their authors to carry them out.
The authors named this significant breakthrough in the cryptanalysis of SHA-1 "The SHAppening".
The method was based on their earlier work, as well as the auxiliary paths (or boomerangs) speed-up technique from Joux and Peyrin, and using high performance/cost efficient GPU cards from NVIDIA.
The collision was found on a 16-node cluster with a total of 64 graphics cards.
The authors estimated that a similar collision could be found by buying US$2,000 of GPU time on EC2.
The authors estimate that the cost of renting EC2 CPU/GPU time enough to generate a full collision for SHA-1 at the time of publication was between US$75K–120K, and note that is well within the budget of criminal organizations, not to mention national intelligence agencies.
As such, the authors recommend that SHA-1 be deprecated as quickly as possible.
========,4,SHAttered - First public collision.
On , Google announced the "SHAttered" attack, in which they generated two different PDF files with the same SHA-1 hash in roughly 2 SHA-1 evaluations.
This attack is about 100,000 times faster than brute forcing a SHA-1 collision with a birthday attack, which is estimated to take 2 SHA-1 evaluations.
The attack required "the equivalent processing power as 6,500 years of single-CPU computations and 110 years of single-GPU computations."
========,3,SHA-0.
At CRYPTO 98, two French researchers, Florent Chabaud and Antoine Joux, presented an attack on SHA-0: collisions can be found with complexity 2, fewer than the 2 for an ideal hash function of the same size.
In 2004, Biham and Chen found near-collisions for SHA-0 — two messages that hash to nearly the same value; in this case, 142 out of the 160 bits are equal.
They also found full collisions of SHA-0 reduced to 62 out of its 80 rounds.
Subsequently, on 12 August 2004, a collision for the full SHA-0 algorithm was announced by Joux, Carribault, Lemuet, and Jalby.
This was done by using a generalization of the Chabaud and Joux attack.
Finding the collision had complexity 2 and took about 80,000 processor-hours on a supercomputer with 256 Itanium 2 processors (equivalent to 13 days of full-time use of the computer).
On 17 August 2004, at the Rump Session of CRYPTO 2004, preliminary results were announced by Wang, Feng, Lai, and Yu, about an attack on MD5, SHA-0 and other hash functions.
The complexity of their attack on SHA-0 is 2, significantly better than the attack by Joux "et al."
In February 2005, an attack by Xiaoyun Wang, Yiqun Lisa Yin, and Hongbo Yu was announced which could find collisions in SHA-0 in 2 operations.
Another attack in 2008 applying the boomerang attack brought the complexity of finding collisions down to 2, which is estimated to take 1 hour on an average PC.
In light of the results for SHA-0, some experts suggested that plans for the use of SHA-1 in new cryptosystems should be reconsidered.
After the CRYPTO 2004 results were published, NIST announced that they planned to phase out the use of SHA-1 by 2010 in favor of the SHA-2 variants.
========,3,Official validation.
Implementations of all FIPS-approved security functions can be officially validated through the CMVP program, jointly run by the National Institute of Standards and Technology (NIST) and the Communications Security Establishment (CSE).
For informal verification, a package to generate a high number of test vectors is made available for download on the NIST site; the resulting verification, however, does not replace the formal CMVP validation, which is required by law for certain applications.
, there are over 2000 validated implementations of SHA-1, with 14 of them capable of handling messages with a length in bits not a multiple of eight (see SHS Validation List).
========,2,Comparison of SHA functions.
In the table below, "internal state" means the "internal hash sum" after each compression of a data block.
Note that performance will vary not only between algorithms, but also with the specific implementation and hardware used.
The OpenSSL tool has a built-in "speed" command that benchmarks the various algorithms on the user's system.
